'''
给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，
使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。
例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，
满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]

'''
class Solution:
    def threeSum(self, nums):
        nums.sort()
        print(nums)
        result = []

        for first_pointer in range(len(nums)-2):
            mid_pointer = first_pointer+1
            last_pointer = len(nums) - 1
            if nums[first_pointer] > 0:
                break
            if nums[first_pointer] == nums[first_pointer-1] and first_pointer>0:
                continue
            while mid_pointer<last_pointer:
                sum = nums[first_pointer]+nums[mid_pointer]+nums[last_pointer]
                if sum == 0:
                    result.append([nums[first_pointer],nums[mid_pointer],nums[last_pointer]])
                    mid_pointer += 1
                    while mid_pointer<last_pointer and nums[mid_pointer] == nums[mid_pointer-1]:
                        mid_pointer += 1
                    last_pointer -= 1
                    while mid_pointer<last_pointer and nums[last_pointer] == nums[last_pointer+1]:
                        last_pointer -= 1
                elif sum < 0:
                    mid_pointer += 1
                    while mid_pointer<last_pointer and nums[mid_pointer] == nums[mid_pointer-1]:
                        mid_pointer += 1
                else:
                    last_pointer -= 1
                    while mid_pointer<last_pointer and nums[last_pointer] == nums[last_pointer+1]:
                        last_pointer -= 1
        return result

if __name__ == '__main__':
    nums = [0,0,0,0]
    s = Solution()
    print(s.threeSum(nums))
